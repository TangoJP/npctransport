Import('env')
import scons_tools.dependency.boost

scons_tools.dependency.boost.add_boost_library(env, "ProgramOptions",
                                               "program_options",
                                               'boost/program_options.hpp',
                                               extra_boost_libs=["system"])

scons_tools.dependency.boost.add_boost_library( env, "FileSystem", "filesystem",
                                                'boost/filesystem/path.hpp',
                                                body="boost::filesystem::path p;",
                                                extra_boost_libs=["system"])

scons_tools.dependency.add_external_library(env, "ProtoBuf", ["protobuf"],
                                            "google/protobuf/text_format.h")

scons_tools.dependency.add_external_cmake_library(env, "RMF",
                                                  ["RMF"],
                                                  "RMF/FileHandle.h",
                                                  extra_libs=[scons_tools.dependency.boost.get_boost_lib_name(env, "system")])

scons_tools.dependency.add_external_cmake_library(env, "AvroCpp", ["avrocpp"],
                                            ["avro/Compiler.hh", "avro/ValidSchema.hh"],
                                            body="""avro::compileJsonSchemaFromString(std::string("{}"));""")


oenv=env.IMPModuleBuild(module="npctransport",
                        version='develop',
                        required_modules=['container',
                                          'display', 'core',
                                          'atom',
                                          'statistics', 'rmf',
                                          'benchmark',
                                          'example',
                                          'score_functor',
                                          'kernel',
                                          'algebra',
                                          'base'],
                        lib_only_optional_modules=['cgal'],
                        cpppath=[Dir("#/build/src/npctransport")],
                        required_dependencies= ['RMF', 'Boost.ProgramOptions',
                                                'Boost.FileSystem',
                                                'ProtoBuf', 'AvroCpp'])
